import tkinter as tk
from tkinter import messagebox
import socket

# Function to scan a single port
def scan_port(target_ip, port):
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((target_ip, port))
        if result == 0:
            return f"Port {port} is open."
        else:
            return f"Port {port} is closed."
    except socket.error:
        return f"Port {port} is closed."

# Function to scan a range of ports
def scan_ports(target_ip, start_port, end_port):
    open_ports = []
    for port in range(start_port, end_port + 1):
        status = scan_port(target_ip, port)
        if "open" in status:
            open_ports.append(port)
    return open_ports

# Function to handle scanning when button is clicked
def start_scan():
    target_ip = entry_ip.get()
    try:
        start_port = int(entry_start_port.get())
        end_port = int(entry_end_port.get())
    except ValueError:
        messagebox.showerror("Input Error", "Please enter valid port numbers.")
        return
    
    if not target_ip:
        messagebox.showerror("Input Error", "Please enter a valid IP address.")
        return
    
    open_ports = scan_ports(target_ip, start_port, end_port)
    
    if open_ports:
        result_text = f"Open Ports: {', '.join(map(str, open_ports))}"
    else:
        result_text = "No open ports found."
    
    result_label.config(text=result_text)

# Setting up the Tkinter UI
root = tk.Tk()
root.title("Port Scanner")

# Labels and Entry Widgets
label_ip = tk.Label(root, text="Enter Target IP:")
label_ip.grid(row=0, column=0, padx=10, pady=5)

entry_ip = tk.Entry(root)
entry_ip.grid(row=0, column=1, padx=10, pady=5)

label_start_port = tk.Label(root, text="Start Port:")
label_start_port.grid(row=1, column=0, padx=10, pady=5)

entry_start_port = tk.Entry(root)
entry_start_port.grid(row=1, column=1, padx=10, pady=5)

label_end_port = tk.Label(root, text="End Port:")
label_end_port.grid(row=2, column=0, padx=10, pady=5)

entry_end_port = tk.Entry(root)
entry_end_port.grid(row=2, column=1, padx=10, pady=5)

# Start Scan Button
scan_button = tk.Button(root, text="Start Scan", command=start_scan)
scan_button.grid(row=3, column=0, columnspan=2, pady=10)

# Result Label
result_label = tk.Label(root, text="Results will be shown here.", justify="left")
result_label.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

# Running the Tkinter main loop
root.mainloop()
